pipeline {
    environment {
        DOCKER_LOGIN= credentials('docker_login')
    }
    agent  {
      label 'dockernode'
    }
    tools {
        maven "maven123"
    }
    options {
        timeout(30)
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm 
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('upload jarfile to nexus') {
            steps {
                nexusArtifactUploader artifacts: [
                    [
                        artifactId: 'my-app', 
                        classifier: '', 
                        file: 'target/my-app-1.0.0.jar', 
                        type: 'jar'
                    ]
                ], credentialsId: 'dockernode', 
                groupId: 'com.mycompany.app', 
                nexusUrl: '192.168.43.11', 
                nexusVersion: 'nexus3', 
                protocol: 'http', 
                repository: 'application-release', 
                version: '1.0.0'
            }
        }
        stage('create Image') {
            steps {
                sh """
                    docker build -t dhanapal406/tomcat-$BUILD_NUMBER .
                    docker login -u $DOCKER_LOGIN_USR -p $DOCKER_LOGIN_PSW
                    docker push dhanapal406/tomcat-$BUILD_NUMBER
                    docker run -itd -p 8080:8080 -v /dhana:/opt dhanapal406/tomcat-$BUILD_NUMBER
                """
            }
        }
        stage('Test') {
            steps {
                sh "mvn test"
                junit allowEmptyResults: true, checksName: 'Tests', testResults: 'target/surefire-reports/*.xml'
            }
        }
        stage('Post tasks') {
            steps {
                sh " echo send an email"
            }
        }
    }
}
